
.wrapper {
	&.horizontal {
		display: flex;
		flex-flow: row nowrap;
	}
	&.vertical {
		display: flex;
		flex-flow: column nowrap;
	}
}

.clearfix() {
	&:before,
	&:after {
		content: " "; // 1
		display: table; // 2
	}
	&:after {
		clear: both;
	}
}

.text-overflow() {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

.stream-hover( @content: @fa-var-play-circle-o ) {
	position: relative;
	cursor: pointer;

	&:hover::before {
		content: @content;
		display: block;
		position: absolute;
		width: 100%;
		top: 50%;
		z-index: 2;
		font: 6em/0 "FontAwesome";
		color: @color-text-brightest;
		text-align: center;
		-webkit-text-stroke: .025em @color-text-darkest;
	}
}

/**
 * Set a dynamic width for wrapped flexbox elements
 */
.dynamic-elems-per-row( @min, @container, @spacing, @additional ) {
	@sp: unit( ( @spacing / 100 ) );
	// width of all elements in a row combined (percentage)
	@content: ( 100% - @spacing );
	// desired element width (pixels)
	@desired: ( ( 1 - @sp ) * @container / @min );

	// the maximum number of elements in a row is 8
	.loop( @i ) when ( @i < 9 ) {
		// window min-width calculation (pixels):
		// additional width to the content container element
		// plus the width of all elements including the free space between each one (row width)
		@media ( min-width: ( @additional + @i * @desired * ( 1 + @sp ) ) ) {
			flex-basis: ( @content / @i );
		}
		.loop( ( @i + 1 ) );
	}

	// for @i=@min to 8 do...
	.loop( @min );
}
