
.content-list {
	.clearfix();

	margin: 0;
	padding: 0;
	list-style: none;
	overflow: hidden;

	.themed({
		color: @themed-contentlist-color;

		i {
			color: @themed-contentlist-icon-color;
		}
	});

	> li {
		float: left;

		&:not(.newItem) {
			@min: @anim-list-item-offset-min;
			@max: @anim-list-item-offset-max;
			@num: 24;
			@inc: ( ( @max - @min ) / @num );

			// let all list items be faded in and use an animation delay:
			// we need to wait for the container animation to finish
			-webkit-animation: animFadeInBottom @anim-list-item-duration @min ease-out both;

			// increase the animation delay for each element...
			.loop( @i ) when ( @i <= @num ) {
				@nth: ~"@{i}";
				&:nth-of-type( @{nth} ) {
					-webkit-animation-delay: ( @min + @i * @inc );
				}
				.loop( ( @i + 1 ) );
			}
			// ...until the max number of elements is reached
			// and use a static max delay time for all remaining elements
			.loop( @i ) when ( @i > @num ) {
				@nth: ~"n+@{i}";
				&:nth-of-type( @{nth} ) {
					-webkit-animation-delay: @max;
				}
			}
			.loop( 1 );
		}
	}
}


.subscription-component {
	@size: 6.5em;
	@padding: 1.5em;

	position: relative;
	min-height: 264px;
	margin-bottom: 2em;
	padding-top: @padding;
	background-position: center center;
	background-size: cover;

	.themed({
		color: @themed-subitem-color;
	});

	// no dynamic columns for this component
	// this media query is required by InfiniteScrollRouteMixin, though
	@media (min-width: 1px) {
		width: 100%;
	}

	a {
		text-decoration: none;
	}

	> header {
		display: flex;
		flex-flow: row nowrap;
		align-items: flex-start;
		justify-content: space-between;

		> .logo {
			display: block;
			position: relative;
			width: @size;
			height: @size;
			margin: 0 0 @padding @padding;
			cursor: pointer;
		}

		> .buttons {
			display: flex;
			flex-flow: row-reverse nowrap;
			align-items: flex-start;
			margin-right: @padding;
			padding: .5em;
			opacity: 0;
			transition: opacity .333s ease-out;

			.themed({
				background: @themed-subitem-background;
			});

			> button:not(:last-of-type) {
				margin-left: .5em;
			}
		}
	}

	&:hover > header > .buttons {
		opacity: 1;
	}

	> .info {
		padding: @padding;

		.themed({
			background: @themed-subitem-background;
		});

		> h3 {
			margin: 0;
			font-size: 1.75em;

			.themed({
				&, & > a:not(:hover) {
					color: @themed-subitem-headline-color;
				}
			});
		}

		> .subscription {
			margin: .5em 0;

			> span {
				display: inline-block;
				margin-right: 2em;
			}
		}

		> .emoticons {
			display: flex;
			justify-content: flex-start;

			> li {
				margin-right: .5em;
			}
		}
	}
}
