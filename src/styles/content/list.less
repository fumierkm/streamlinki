
@content-width: ( @app-width - @menu-width - 2 * @scrollbar-size );
@additional-width: ( @app-width - @content-width );


.content-list {
	.clearfix();

	margin: 0;
	padding: 0;
	list-style: none;
	overflow: hidden;

	.themed({
		color: @themed-contentlist-color;

		i {
			color: @themed-contentlist-icon-color;
		}
	});

	> li {
		float: left;

		&:not(.newItem) {
			@min: @anim-list-item-offset-min;
			@max: @anim-list-item-offset-max;
			@num: 24;
			@inc: ( ( @max - @min ) / @num );

			// let all list items be faded in and use an animation delay:
			// we need to wait for the container animation to finish
			-webkit-animation: animFadeInBottom @anim-list-item-duration @min ease-out both;

			// increase the animation delay for each element...
			.loop( @i ) when ( @i <= @num ) {
				@nth: ~"@{i}";
				&:nth-of-type( @{nth} ) {
					-webkit-animation-delay: ( @min + @i * @inc );
				}
				.loop( ( @i + 1 ) );
			}
			// ...until the max number of elements is reached
			// and use a static max delay time for all remaining elements
			.loop( @i ) when ( @i > @num ) {
				@nth: ~"n+@{i}";
				&:nth-of-type( @{nth} ) {
					-webkit-animation-delay: @max;
				}
			}
			.loop( 1 );
		}
	}
}


.game-component {
	@padding: .333em;
	@header-max-height: ( 2 * unit( @line-height-base, em ) + 2 * @padding );
	@footer-max-height: ( 1 * unit( @line-height-base, em ) + 2 * @padding );
	@speed: .2s;

	position: relative;
	min-height: 235px;
	margin-bottom: 20px;
	overflow: hidden;
	cursor: pointer;
	.dynamic-elems-per-row( 4, @content-width, 8%, @additional-width );
	.block-aspect-ratio( ( 272 / 380 ) );

	> header,
	> footer {
		position: absolute;
		width: 100%;
		padding: @padding;
		opacity: 0;
		transition: opacity @speed ease-out, top @speed ease-out, bottom @speed ease-out;

		.themed({
			background: @themed-gameitem-overlay-background;
			color: @themed-gameitem-overlay-color;
		});
	}

	> header {
		top: ( -1 * @header-max-height );
		max-height: @header-max-height;
		// limit text to two rows... needs webkit specific properties
		display: -webkit-box;
		-webkit-line-clamp: 2;
		-webkit-box-orient: vertical;
		overflow: hidden;
		text-overflow: ellipsis;
		text-align: center;
	}

	> footer {
		bottom: ( -1 * @footer-max-height );
		max-height: @footer-max-height;
		display: flex;
		justify-content: space-between;
	}

	&:hover {
		> header {
			top: 0;
			opacity: 1;
		}

		> footer {
			bottom: 0;
			opacity: 1;
		}
	}
}

.stream-component {
	@padding: .25em;
	@footer-height: ( 1 * unit( @line-height-base, em ) + 2 * @padding );
	@duration: .25s;

	min-height: 185px;
	margin-bottom: 20px;
	.dynamic-elems-per-row( 3, @content-width, 8%, @additional-width );
	.stream-hover( @duration: @duration );

	&.faded {
		&:not(:hover) > * {
			opacity: .25;
		}

		> * {
			transition: opacity .333s ease-out;
		}
	}

	> header {
		display: flex;
		align-items: center;
		padding: .25em 0;

		> i {
			opacity: 0;
			transition: opacity @duration ease-out;
		}

		> span {
			flex: 1;
			margin: 0 .5em;
			overflow: hidden;
			text-align: center;
			white-space: nowrap;
			text-overflow: ellipsis;

			&.noL  { margin-left : ( .5em + @flag-icon-width ); }
			&.noBL { margin-right: ( .5em + @flag-icon-width ); }

			> a {
				text-decoration: none;
			}
		}
	}

	&:hover,
	&.show-flag {
		> header > i {
			opacity: 1;
		}
	}

	> footer {
		display: flex;
		justify-content: space-between;

		.themed({
			color: @themed-streamitem-footer-color;

			i {
				color: @themed-streamitem-footer-icon-color;
			}
		});
	}

	> .preview {
		overflow: hidden;

		> footer,
		> .btn-expand {
			position: absolute;
			bottom: -@footer-height;
			font-size: .85em;
			opacity: 0;
			transition: opacity @duration ease-out, bottom @duration ease-out;
		}

		> .btn-expand {
			right: 0;
			padding: @padding ( 1.5 * @padding );
			cursor: pointer;

			&:hover {
				opacity: .875 !important;
			}

			&:hover:active {
				opacity: 1 !important;
			}
		}

		&:hover,
		&.expanded {
			> .btn-expand {
				bottom: 0;
				opacity: .75;
			}
		}

		// make expand button a bit more visible if there is no shaded footer
		&:not(.expanded) > footer:not(.shaded) + .btn-expand {
			opacity: .875;

			> i {
				.themed({
					color: @themed-streamitem-play-color;
					-webkit-text-stroke: .025em @themed-streamitem-play-stroke;
				});
			}
		}

		> footer {
			display: flex;
			flex-flow: column-reverse nowrap;
			width: 100%;
			height: 100%;

			> .bottom {
				// Set an icon width and move the icon to the left, so the text remains centered.
				// Let the text have a max-width, so the icon stays on the screen.
				@icon-width: 1.5em;
				@icon-offset: ( -1 * @icon-width );
				@text-max-width: ( -2 * @icon-offset );

				display: flex;
				justify-content: center;
				height: @footer-height;
				padding: @padding;

				> i {
					width: @icon-width;
					margin-left: @icon-offset;
					text-align: center;

					&.fa-gamepad {
						text-indent: -.05em;
					}
				}

				> a {
					max-width: calc( 100% - @text-max-width );
					overflow: hidden;
					white-space: nowrap;
					text-overflow: ellipsis;
					text-decoration: none;

					&:not(:hover) {
						.themed({
							color: @themed-streamitem-game-color;
						});
					}
				}
			}

			> .details {
				position: relative;
				flex-grow: 1;
				overflow: hidden;

				> div {
					position: absolute;
					width: 100%;
					height: 100%;
					display: flex;
					flex-flow: column nowrap;
					padding: @padding;
					bottom: -100%;
					opacity: 0;
					transition: opacity @duration ease-out, bottom @duration ease-out;

					> .stats {
						display: flex;
						justify-content: space-between;

						i.fa-film {
							// fix alignment of film icon
							position: relative;
							top: -.1em;
						}
					}

					> .status {
						display: flex;
						flex-flow: column nowrap;
						flex-grow: 1;
						justify-content: space-around;

						> div {
							// center text vertically and horizontally
							// allow only 4 lines of text
							flex-grow: 0;
							display: -webkit-box;
							padding: 0 .5em;
							-webkit-line-clamp: 4;
							-webkit-box-orient: vertical;
							overflow: hidden;
							text-overflow: ellipsis;
							text-align: center;
						}
					}
				}
			}

			&.expanded {
				> .details > div {
					bottom: 0;
					opacity: 1;
				}

				> .bottom,
				> .details > div {
					cursor: default;
				}
			}

			&.shaded > .bottom,
			> .details > div {
				.themed({
					background: @themed-streamitem-overlay-background;
				});
			}
		}

		&:hover,
		&.expanded {
			> footer {
				bottom: 0;
				opacity: 1;
			}
		}

		&:hover > .previewError::before {
			opacity: 0;
		}

		&.expanded::after {
			display: none;
		}
	}
}

.channel-component {
	min-height: 91px;
	display: flex;
	flex-flow: row nowrap;
	margin-bottom: 1.5em;
	.dynamic-elems-per-row( 2, @content-width, 4%, @additional-width );

	> .logo {
		@size: 6.5em;

		display: block;
		position: relative;
		width: @size;
		height: @size;
		flex-shrink: 0;
		cursor: pointer;
	}

	> .text {
		margin: 0 .5em;

		> header {
			margin: 0 0 .5em;
		}

		> .game {
			margin: 0 0 .25em;
		}

		> .status {
			height: @line-height-base;
			overflow: hidden;
			white-space: nowrap;
			text-overflow: ellipsis;
		}
	}
}

.subscription-component {
	@size: 6.5em;
	@padding: 1.5em;

	position: relative;
	min-height: 264px;
	margin-bottom: 2em;
	padding-top: @padding;
	background-position: center center;
	background-size: cover;

	.themed({
		color: @themed-subitem-color;
	});

	// no dynamic columns for this component
	// this media query is required by InfiniteScrollRouteMixin, though
	@media (min-width: 1px) {
		width: 100%;
	}

	a {
		text-decoration: none;
	}

	> header {
		display: flex;
		flex-flow: row nowrap;
		align-items: flex-start;
		justify-content: space-between;

		> .logo {
			display: block;
			position: relative;
			width: @size;
			height: @size;
			margin: 0 0 @padding @padding;
			cursor: pointer;
		}

		> .buttons {
			display: flex;
			flex-flow: row-reverse nowrap;
			align-items: flex-start;
			margin-right: @padding;
			padding: .5em;
			opacity: 0;
			transition: opacity .333s ease-out;

			.themed({
				background: @themed-subitem-background;
			});

			> button:not(:last-of-type) {
				margin-left: .5em;
			}
		}
	}

	&:hover > header > .buttons {
		opacity: 1;
	}

	> .info {
		padding: @padding;

		.themed({
			background: @themed-subitem-background;
		});

		> h3 {
			margin: 0;
			font-size: 1.75em;

			.themed({
				&, & > a:not(:hover) {
					color: @themed-subitem-headline-color;
				}
			});
		}

		> .subscription {
			margin: .5em 0;

			> span {
				display: inline-block;
				margin-right: 2em;
			}
		}

		> .emoticons {
			display: flex;
			justify-content: flex-start;

			> li {
				margin-right: .5em;
			}
		}
	}
}
