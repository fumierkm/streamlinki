
.quick-bar-component {
	@button-size: unit( ( 1 + 2 * unit( @button-padding ) ), rem );

	display: flex;
	flex-flow: row-reverse nowrap;
	flex-grow: 0;
	flex-shrink: 0;
	height: @button-size;
	margin-left: 1rem;
	font-size: 1rem;
	opacity: .5;
	transition: opacity .333s ease-out;

	&:hover,
	&.locked {
		opacity: 1;
	}

	> .menu {
		display: flex;
		max-width: 0;
		overflow: hidden;
		transition: max-width .333s ease-out;

		button,
		.multibtn {
			flex-shrink: 0;
			margin-right: .333em;
		}

		button.active > i {
			// FIXME
			.theme({
				color: @theme-button-icon-color-active;
			});
		}

		.multibtn {
			display: flex;

			> button {
				margin-right: 0;

				&:not( :first-of-type ) {
					border-left-width: 0;
					padding-left: @button-border-width;
				}
				&:not( :last-of-type ) {
					border-right-width: 0;
					padding-right: @button-border-width;
				}
			}
		}
	}

	&.opened > .menu {
		max-width: 100%;
	}

	button {
		width: @button-size;
		min-width: inherit;
		padding: 0;
		font-size: inherit;
		line-height: 1.5;
		text-align: center;

		> i {
			height: inherit;
			font-size: inherit;
			line-height: inherit;
			vertical-align: inherit;
			color: inherit;
		}
	}

	// FIXME
	.theme({
		> .btn-open {
			border-color: @theme-quickbar-open-border-color !important;
			color: @theme-quickbar-open-color !important;
			background: @theme-quickbar-open-background !important;
		}

		> .btn-open:hover:active,
		&.opened > .btn-open {
			color: @theme-quickbar-open-color-active !important;
		}
	});

	> .btn-open > i {
		color: inherit !important;
	}
}
